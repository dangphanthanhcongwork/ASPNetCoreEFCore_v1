// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WebApplication.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAppication.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aca5dbe5-f96d-46a2-b8b5-6a676dddd01b"),
                            Name = "Software Development"
                        },
                        new
                        {
                            Id = new Guid("82421c74-579d-40ab-b104-c3435c42d1ab"),
                            Name = "Finance"
                        },
                        new
                        {
                            Id = new Guid("de277e98-f157-47b3-9636-14c30bf2fc4f"),
                            Name = "Accountant"
                        },
                        new
                        {
                            Id = new Guid("6af2bec5-9dbf-431e-b542-59f7dc54ad68"),
                            Name = "HR"
                        });
                });

            modelBuilder.Entity("WebAppication.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1bb38781-9a96-4f8f-ace6-0f66247ffda9"),
                            DepartmentId = new Guid("aca5dbe5-f96d-46a2-b8b5-6a676dddd01b"),
                            JoinedDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Đặng Phan Thành Công"
                        },
                        new
                        {
                            Id = new Guid("6991947f-7f9d-4d31-8fd5-f2a5517a314e"),
                            DepartmentId = new Guid("82421c74-579d-40ab-b104-c3435c42d1ab"),
                            JoinedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nguyễn Mỹ Linh"
                        },
                        new
                        {
                            Id = new Guid("ad537c8c-e592-4292-9eef-a517dfaf8dac"),
                            DepartmentId = new Guid("de277e98-f157-47b3-9636-14c30bf2fc4f"),
                            JoinedDate = new DateTime(2023, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Trần Thị Minh Phương"
                        },
                        new
                        {
                            Id = new Guid("65f5df7b-aa7d-4d67-a479-1273642eefb2"),
                            DepartmentId = new Guid("6af2bec5-9dbf-431e-b542-59f7dc54ad68"),
                            JoinedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Phan Thị Thu Hà"
                        });
                });

            modelBuilder.Entity("WebAppication.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("298d8fde-6901-4505-b341-e7345e17e2f3"),
                            Name = "Project A"
                        },
                        new
                        {
                            Id = new Guid("00d231d1-113c-4253-884b-ff035e2c5f79"),
                            Name = "Project B"
                        });
                });

            modelBuilder.Entity("WebAppication.Models.ProjectEmployee", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProjectId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("ProjectEmployees");

                    b.HasData(
                        new
                        {
                            ProjectId = new Guid("298d8fde-6901-4505-b341-e7345e17e2f3"),
                            EmployeeId = new Guid("1bb38781-9a96-4f8f-ace6-0f66247ffda9")
                        },
                        new
                        {
                            ProjectId = new Guid("298d8fde-6901-4505-b341-e7345e17e2f3"),
                            EmployeeId = new Guid("6991947f-7f9d-4d31-8fd5-f2a5517a314e")
                        },
                        new
                        {
                            ProjectId = new Guid("298d8fde-6901-4505-b341-e7345e17e2f3"),
                            EmployeeId = new Guid("ad537c8c-e592-4292-9eef-a517dfaf8dac")
                        },
                        new
                        {
                            ProjectId = new Guid("298d8fde-6901-4505-b341-e7345e17e2f3"),
                            EmployeeId = new Guid("65f5df7b-aa7d-4d67-a479-1273642eefb2")
                        },
                        new
                        {
                            ProjectId = new Guid("00d231d1-113c-4253-884b-ff035e2c5f79"),
                            EmployeeId = new Guid("6991947f-7f9d-4d31-8fd5-f2a5517a314e")
                        },
                        new
                        {
                            ProjectId = new Guid("00d231d1-113c-4253-884b-ff035e2c5f79"),
                            EmployeeId = new Guid("ad537c8c-e592-4292-9eef-a517dfaf8dac")
                        },
                        new
                        {
                            ProjectId = new Guid("00d231d1-113c-4253-884b-ff035e2c5f79"),
                            EmployeeId = new Guid("65f5df7b-aa7d-4d67-a479-1273642eefb2")
                        });
                });

            modelBuilder.Entity("WebAppication.Models.Salary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("SalaryAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Salaries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80c1736a-ff7b-4177-8e0a-fbcb72983e0a"),
                            EmployeeId = new Guid("1bb38781-9a96-4f8f-ace6-0f66247ffda9"),
                            SalaryAmount = 100m
                        },
                        new
                        {
                            Id = new Guid("6c1c65ac-f098-469d-91d3-c0741270d363"),
                            EmployeeId = new Guid("6991947f-7f9d-4d31-8fd5-f2a5517a314e"),
                            SalaryAmount = 120m
                        },
                        new
                        {
                            Id = new Guid("65c73311-493b-45ac-9830-6a3108e701d1"),
                            EmployeeId = new Guid("ad537c8c-e592-4292-9eef-a517dfaf8dac"),
                            SalaryAmount = 150m
                        },
                        new
                        {
                            Id = new Guid("fbafe064-aa1f-4529-be2b-2e8784080aa6"),
                            EmployeeId = new Guid("65f5df7b-aa7d-4d67-a479-1273642eefb2"),
                            SalaryAmount = 200m
                        });
                });

            modelBuilder.Entity("WebAppication.Models.Employee", b =>
                {
                    b.HasOne("WebAppication.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("WebAppication.Models.ProjectEmployee", b =>
                {
                    b.HasOne("WebAppication.Models.Employee", "Employee")
                        .WithMany("ProjectEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAppication.Models.Project", "Project")
                        .WithMany("ProjectEmployees")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("WebAppication.Models.Salary", b =>
                {
                    b.HasOne("WebAppication.Models.Employee", "Employee")
                        .WithOne("Salary")
                        .HasForeignKey("WebAppication.Models.Salary", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("WebAppication.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("WebAppication.Models.Employee", b =>
                {
                    b.Navigation("ProjectEmployees");

                    b.Navigation("Salary")
                        .IsRequired();
                });

            modelBuilder.Entity("WebAppication.Models.Project", b =>
                {
                    b.Navigation("ProjectEmployees");
                });
#pragma warning restore 612, 618
        }
    }
}
